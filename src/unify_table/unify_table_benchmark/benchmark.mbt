
// This file is generated by the benchmark generator.


pub fn get_data_0(result: FixedArray[((Int, Int, Int), Array[(Int, Int)], Array[Int])]) -> Unit {
    result[0] = ((6, 6, 4), Array::new(), Array::new())
    result[0].1.push((1, 2))
    result[0].1.push((2, 3))
    result[0].1.push((3, 1))
    result[0].1.push((1, 4))
    result[0].1.push((2, 5))
    result[0].1.push((3, 0))
    result[0].2.push(0)
    result[0].2.push(1)
    result[0].2.push(2)
    result[0].2.push(3)
    result[0].2.push(4)
}


pub fn get_answers_0(result: FixedArray[Array[Int]]) -> Unit {
    result[0].push(1)
    result[0].push(2)
    result[0].push(3)
    result[0].push(3)
    result[0].push(2)
}


pub fn data() -> FixedArray[((Int, Int, Int), Array[(Int, Int)], Array[Int])] {
    let result = FixedArray::makei(1, fn(_) { ((0, 0, 0), Array::new(), Array::new()) })
    get_data_0(result)
    result
}

pub fn answers() -> FixedArray[Array[Int]] {
    let result = FixedArray::makei(1, fn(_) { Array::new() })
    get_answers_0(result)
    result
}
